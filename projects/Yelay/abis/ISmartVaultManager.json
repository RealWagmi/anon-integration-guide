{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flushIndex",
          "type": "uint256"
        }
      ],
      "name": "SmartVaultFlushed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint16a16",
          "name": "newAllocations",
          "type": "uint256"
        }
      ],
      "name": "SmartVaultReallocated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "assetGroupId",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint16a16",
              "name": "strategyAllocation",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "managementFeePct",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "depositFeePct",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "performanceFeePct",
              "type": "uint16"
            }
          ],
          "indexed": false,
          "internalType": "struct SmartVaultRegistrationForm",
          "name": "registrationForm",
          "type": "tuple"
        }
      ],
      "name": "SmartVaultRegistered",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "flushIndex",
          "type": "uint256"
        }
      ],
      "name": "SmartVaultSynced",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "vault",
          "type": "address"
        }
      ],
      "name": "StrategyRemovedFromVault",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        }
      ],
      "name": "allocations",
      "outputs": [
        {
          "internalType": "uint16a16",
          "name": "allocation",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        }
      ],
      "name": "assetGroupId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "assetGroupId",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartVaultAddress",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "nftIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "nftAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "claimSmartVaultTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "claimedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "nftIds",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "nftAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        }
      ],
      "name": "claimWithdrawal",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "assetAmounts",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "assetGroupId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "assets",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "referral",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "doFlush",
              "type": "bool"
            }
          ],
          "internalType": "struct DepositBag",
          "name": "bag",
          "type": "tuple"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "receipt",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        }
      ],
      "name": "depositRatio",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "ratio",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "flushIndex",
          "type": "uint256"
        }
      ],
      "name": "dhwIndexes",
      "outputs": [
        {
          "internalType": "uint16a16",
          "name": "dhwIndexes",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        }
      ],
      "name": "flushSmartVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        }
      ],
      "name": "getLatestFlushIndex",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "flushIndex",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address[]",
              "name": "smartVaults",
              "type": "address[]"
            },
            {
              "internalType": "address[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "swapTarget",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "swapCallData",
                  "type": "bytes"
                }
              ],
              "internalType": "struct SwapInfo[][]",
              "name": "swapInfo",
              "type": "tuple[][]"
            },
            {
              "internalType": "uint256[][]",
              "name": "depositSlippages",
              "type": "uint256[][]"
            },
            {
              "internalType": "uint256[][]",
              "name": "withdrawalSlippages",
              "type": "uint256[][]"
            },
            {
              "internalType": "uint256[2][]",
              "name": "exchangeRateSlippages",
              "type": "uint256[2][]"
            },
            {
              "internalType": "uint256",
              "name": "validUntil",
              "type": "uint256"
            }
          ],
          "internalType": "struct ReallocateParamBag",
          "name": "reallocateParams",
          "type": "tuple"
        }
      ],
      "name": "reallocate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        }
      ],
      "name": "recoverPendingDeposits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "nftIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "nftAmounts",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct RedeemBag",
          "name": "bag",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "receiver",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "doFlush",
          "type": "bool"
        }
      ],
      "name": "redeem",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "receipt",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "nftIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "nftAmounts",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct RedeemBag",
          "name": "bag",
          "type": "tuple"
        },
        {
          "internalType": "uint256[][]",
          "name": "withdrawalSlippages",
          "type": "uint256[][]"
        }
      ],
      "name": "redeemFast",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "withdrawnAssets",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "nftIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "nftAmounts",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct RedeemBag",
          "name": "bag",
          "type": "tuple"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "doFlush",
          "type": "bool"
        }
      ],
      "name": "redeemFor",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "receipt",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "assetGroupId",
              "type": "uint256"
            },
            {
              "internalType": "address[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint16a16",
              "name": "strategyAllocation",
              "type": "uint256"
            },
            {
              "internalType": "uint16",
              "name": "managementFeePct",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "depositFeePct",
              "type": "uint16"
            },
            {
              "internalType": "uint16",
              "name": "performanceFeePct",
              "type": "uint16"
            }
          ],
          "internalType": "struct SmartVaultRegistrationForm",
          "name": "registrationForm",
          "type": "tuple"
        }
      ],
      "name": "registerSmartVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "vaults",
          "type": "address[]"
        },
        {
          "internalType": "bool",
          "name": "disableStrategy",
          "type": "bool"
        }
      ],
      "name": "removeStrategyFromVaults",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        }
      ],
      "name": "simulateSync",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "oldTotalSVTs",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "mintedSVTs",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "feeSVTs",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "sstShares",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "userAddress",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "nftIds",
          "type": "uint256[]"
        }
      ],
      "name": "simulateSyncWithBurn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "svts",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        }
      ],
      "name": "strategies",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "strategies",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "smartVault",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "revertIfError",
          "type": "bool"
        }
      ],
      "name": "syncSmartVault",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allocations(address)": "52a9039c",
    "assetGroupId(address)": "6e6462d6",
    "claimSmartVaultTokens(address,uint256[],uint256[])": "61189dd3",
    "claimWithdrawal(address,uint256[],uint256[],address)": "f8a70486",
    "deposit((address,uint256[],address,address,bool))": "fa15b91b",
    "depositRatio(address)": "f8fdca7a",
    "dhwIndexes(address,uint256)": "e90173bd",
    "flushSmartVault(address)": "0d574535",
    "getLatestFlushIndex(address)": "a1280e4d",
    "reallocate((address[],address[],(address,address,bytes)[][],uint256[][],uint256[][],uint256[2][],uint256))": "fe19c168",
    "recoverPendingDeposits(address)": "260c2313",
    "redeem((address,uint256,uint256[],uint256[]),address,bool)": "388bbfd3",
    "redeemFast((address,uint256,uint256[],uint256[]),uint256[][])": "e1c2eea6",
    "redeemFor((address,uint256,uint256[],uint256[]),address,bool)": "7f03e683",
    "registerSmartVault(address,(uint256,address[],uint256,uint16,uint16,uint16))": "146c6743",
    "removeStrategyFromVaults(address,address[],bool)": "a1bd9cc1",
    "simulateSync(address)": "bb9a7578",
    "simulateSyncWithBurn(address,address,uint256[])": "ab1e74ca",
    "strategies(address)": "39ebf823",
    "syncSmartVault(address,bool)": "73bf0e50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"}],\"name\":\"SmartVaultFlushed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint16a16\",\"name\":\"newAllocations\",\"type\":\"uint256\"}],\"name\":\"SmartVaultReallocated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint16a16\",\"name\":\"strategyAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"managementFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"depositFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"performanceFeePct\",\"type\":\"uint16\"}],\"indexed\":false,\"internalType\":\"struct SmartVaultRegistrationForm\",\"name\":\"registrationForm\",\"type\":\"tuple\"}],\"name\":\"SmartVaultRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"}],\"name\":\"SmartVaultSynced\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"vault\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromVault\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"allocations\",\"outputs\":[{\"internalType\":\"uint16a16\",\"name\":\"allocation\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"assetGroupId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVaultAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"}],\"name\":\"claimSmartVaultTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"claimedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"claimWithdrawal\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"assetAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"assets\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"referral\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"doFlush\",\"type\":\"bool\"}],\"internalType\":\"struct DepositBag\",\"name\":\"bag\",\"type\":\"tuple\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receipt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"depositRatio\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ratio\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"}],\"name\":\"dhwIndexes\",\"outputs\":[{\"internalType\":\"uint16a16\",\"name\":\"dhwIndexes\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"flushSmartVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"getLatestFlushIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"flushIndex\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"smartVaults\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"swapTarget\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"swapCallData\",\"type\":\"bytes\"}],\"internalType\":\"struct SwapInfo[][]\",\"name\":\"swapInfo\",\"type\":\"tuple[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"depositSlippages\",\"type\":\"uint256[][]\"},{\"internalType\":\"uint256[][]\",\"name\":\"withdrawalSlippages\",\"type\":\"uint256[][]\"},{\"internalType\":\"uint256[2][]\",\"name\":\"exchangeRateSlippages\",\"type\":\"uint256[2][]\"},{\"internalType\":\"uint256\",\"name\":\"validUntil\",\"type\":\"uint256\"}],\"internalType\":\"struct ReallocateParamBag\",\"name\":\"reallocateParams\",\"type\":\"tuple\"}],\"name\":\"reallocate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"recoverPendingDeposits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct RedeemBag\",\"name\":\"bag\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"doFlush\",\"type\":\"bool\"}],\"name\":\"redeem\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receipt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct RedeemBag\",\"name\":\"bag\",\"type\":\"tuple\"},{\"internalType\":\"uint256[][]\",\"name\":\"withdrawalSlippages\",\"type\":\"uint256[][]\"}],\"name\":\"redeemFast\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"withdrawnAssets\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"nftAmounts\",\"type\":\"uint256[]\"}],\"internalType\":\"struct RedeemBag\",\"name\":\"bag\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"doFlush\",\"type\":\"bool\"}],\"name\":\"redeemFor\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"receipt\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"assetGroupId\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint16a16\",\"name\":\"strategyAllocation\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"managementFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"depositFeePct\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"performanceFeePct\",\"type\":\"uint16\"}],\"internalType\":\"struct SmartVaultRegistrationForm\",\"name\":\"registrationForm\",\"type\":\"tuple\"}],\"name\":\"registerSmartVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"vaults\",\"type\":\"address[]\"},{\"internalType\":\"bool\",\"name\":\"disableStrategy\",\"type\":\"bool\"}],\"name\":\"removeStrategyFromVaults\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"simulateSync\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"oldTotalSVTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mintedSVTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeSVTs\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"sstShares\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"nftIds\",\"type\":\"uint256[]\"}],\"name\":\"simulateSyncWithBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"svts\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"}],\"name\":\"strategies\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"strategies\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"smartVault\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revertIfError\",\"type\":\"bool\"}],\"name\":\"syncSmartVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"SmartVaultFlushed(address,uint256)\":{\"params\":{\"flushIndex\":\"Flush index\",\"smartVault\":\"Smart vault address\"}},\"SmartVaultReallocated(address,uint256)\":{\"params\":{\"newAllocations\":\"new vault strategy allocations\",\"smartVault\":\"Smart vault address\"}},\"SmartVaultRegistered(address,(uint256,address[],uint256,uint16,uint16,uint16))\":{\"params\":{\"registrationForm\":\"Smart vault configuration\",\"smartVault\":\"Smart vault address\"}},\"SmartVaultSynced(address,uint256)\":{\"params\":{\"flushIndex\":\"Flush index\",\"smartVault\":\"Smart vault address\"}},\"StrategyRemovedFromVault(address,address)\":{\"params\":{\"strategy\":\"Strategy address\",\"vault\":\"Vault to remove the strategy from\"}}},\"kind\":\"dev\",\"methods\":{\"allocations(address)\":{\"params\":{\"smartVault\":\"Smart vault.\"},\"returns\":{\"allocation\":\"Strategy allocation for the smart vault.\"}},\"assetGroupId(address)\":{\"params\":{\"smartVault\":\"Smart vault.\"},\"returns\":{\"assetGroupId\":\"ID of the asset group used by the smart vault.\"}},\"claimSmartVaultTokens(address,uint256[],uint256[])\":{\"details\":\"Requirements: - deposit NFT must be valid - flush must be synced\",\"params\":{\"nftAmounts\":\"amounts\",\"nftIds\":\"ID of the deposit NFT to burn.\",\"smartVaultAddress\":\"Address of the smart vault that issued the deposit NFT.\"},\"returns\":{\"claimedAmount\":\"Amount of smart vault tokens claimed.\"}},\"claimWithdrawal(address,uint256[],uint256[],address)\":{\"details\":\"Requirements: - withdrawal NFT must be valid\",\"params\":{\"nftAmounts\":\"amounts\",\"nftIds\":\"ID of withdrawal NFT to burn.\",\"receiver\":\"Receiver of claimed assets.\",\"smartVault\":\"Address of the smart vault that issued the withdrawal NFT.\"},\"returns\":{\"assetAmounts\":\"Amounts of assets claimed.\",\"assetGroupId\":\"ID of the asset group.\"}},\"deposit((address,uint256[],address,address,bool))\":{\"params\":{\"bag\":\"smartVault address, assets, NFT receiver address, referral address, doFlush\"},\"returns\":{\"receipt\":\"ID of the receipt deposit NFT.\"}},\"depositRatio(address)\":{\"params\":{\"smartVault\":\"Smart vault.\"},\"returns\":{\"ratio\":\"Required deposit ratio for the smart vault.\"}},\"dhwIndexes(address,uint256)\":{\"params\":{\"flushIndex\":\"Flush index.\",\"smartVault\":\"Smart vault.\"},\"returns\":{\"dhwIndexes\":\"Do-hard-work indexes for flush index of the smart vault.\"}},\"flushSmartVault(address)\":{\"params\":{\"smartVault\":\"Smart vault to flush.\"}},\"getLatestFlushIndex(address)\":{\"params\":{\"smartVault\":\"Smart vault.\"},\"returns\":{\"flushIndex\":\"Latest flush index for the smart vault.\"}},\"reallocate((address[],address[],(address,address,bytes)[][],uint256[][],uint256[][],uint256[2][],uint256))\":{\"details\":\"Requirements: - caller must have a ROLE_REALLOCATOR role - smart vaults must be registered - smart vaults must use same asset group - strategies must represent a set of strategies used by smart vaults\",\"params\":{\"reallocateParams\":\"Paramaters for reallocation.\"}},\"recoverPendingDeposits(address)\":{\"details\":\"Requirements: - caller must have role ROLE_SPOOL_ADMIN - all strategies of the smart vault need to be ghost strategies\",\"params\":{\"smartVault\":\"Smart vault from which to recover pending deposits.\"}},\"redeem((address,uint256,uint256[],uint256[]),address,bool)\":{\"params\":{\"bag\":\"smart vault address, amount of shares to redeem, nft ids and amounts to burn\",\"doFlush\":\"optionally flush the smart vault\",\"receiver\":\"address that will receive the withdrawal NFT\"},\"returns\":{\"receipt\":\"ID of the receipt withdrawal NFT.\"}},\"redeemFast((address,uint256,uint256[],uint256[]),uint256[][])\":{\"params\":{\"bag\":\"Parameters for fast redeemal.\",\"withdrawalSlippages\":\"Slippages guarding redeemal.\"},\"returns\":{\"withdrawnAssets\":\"Amount of assets withdrawn.\"}},\"redeemFor((address,uint256,uint256[],uint256[]),address,bool)\":{\"params\":{\"bag\":\"smart vault address, amount of shares to redeem, nft ids and amounts to burn\",\"doFlush\":\"optionally flush the smart vault\",\"owner\":\"address that owns the shares to be redeemed and will receive the withdrawal NFT\"},\"returns\":{\"receipt\":\"ID of the receipt withdrawal NFT.\"}},\"registerSmartVault(address,(uint256,address[],uint256,uint16,uint16,uint16))\":{\"details\":\"Requirements: - caller must have role ROLE_SMART_VAULT_INTEGRATOR\",\"params\":{\"registrationForm\":\"Form with information for registration.\",\"smartVault\":\"Smart vault to register.\"}},\"removeStrategyFromVaults(address,address[],bool)\":{\"details\":\"Requirements: - caller must have role ROLE_SPOOL_ADMIN - the strategy has to be active (requires ROLE_STRATEGY)\",\"params\":{\"disableStrategy\":\"Also disable the strategy across the system\",\"strategy\":\"Strategy address to remove.\",\"vaults\":\"Array of vaults from which to remove the strategy\"}},\"simulateSync(address)\":{\"details\":\"Calculate number of SVTs that haven't been synced yet after DHW runs DHW has minted strategy shares, but vaults haven't claimed them yet. Includes management fees (percentage of assets under management, distributed throughout a year) and deposit fees . Invariants: - There can't be more than once un-synced flush index per vault at any given time. - Flush index can't be synced, if all DHWs haven't been completed yet. Can be used to retrieve the number of SSTs the vault would claim during sync.\",\"params\":{\"smartVault\":\"SmartVault address\"},\"returns\":{\"feeSVTs\":\"Amount of SVTs pertaining to fees\",\"mintedSVTs\":\"Amount of SVTs minted during sync\",\"oldTotalSVTs\":\"Amount of SVTs before sync\",\"sstShares\":\"Amount of SSTs claimed per strategy\"}},\"simulateSyncWithBurn(address,address,uint256[])\":{\"details\":\"Simulate sync when burning dNFTs and return their svts value.\",\"params\":{\"nftIds\":\"Ids of dNFTs\",\"smartVault\":\"SmartVault address\",\"userAddress\":\"User address that owns dNFTs\"},\"returns\":{\"svts\":\"Amount of svts user would get if he burns dNFTs\"}},\"strategies(address)\":{\"params\":{\"smartVault\":\"Smart vault.\"},\"returns\":{\"strategies\":\"Strategies for the smart vault.\"}},\"syncSmartVault(address,bool)\":{\"params\":{\"revertIfError\":\"If true, sync will revert if every flush index cannot be synced; if false it will sync all flush indexes it can.\",\"smartVault\":\"Smart vault to sync.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"SmartVaultFlushed(address,uint256)\":{\"notice\":\"Smart vault has been flushed\"},\"SmartVaultReallocated(address,uint256)\":{\"notice\":\"Vault was reallocation executed\"},\"SmartVaultRegistered(address,(uint256,address[],uint256,uint16,uint16,uint16))\":{\"notice\":\"Smart vault has been registered\"},\"SmartVaultSynced(address,uint256)\":{\"notice\":\"Smart vault has been synced\"},\"StrategyRemovedFromVault(address,address)\":{\"notice\":\"Strategy was removed from the vault\"}},\"kind\":\"user\",\"methods\":{\"allocations(address)\":{\"notice\":\"Gets strategy allocation for a smart vault.\"},\"assetGroupId(address)\":{\"notice\":\"Gets asest group used by a smart vault.\"},\"claimSmartVaultTokens(address,uint256[],uint256[])\":{\"notice\":\"Claims smart vault tokens by burning the deposit NFT.\"},\"claimWithdrawal(address,uint256[],uint256[],address)\":{\"notice\":\"Claims withdrawal of assets by burning withdrawal NFT.\"},\"deposit((address,uint256[],address,address,bool))\":{\"notice\":\"Initiated a deposit and mints a deposit NFT. Once all DHWs are executed, user can unwrap the deposit NDF and claim his SVTs.\"},\"depositRatio(address)\":{\"notice\":\"Gets required deposit ratio for a smart vault.\"},\"dhwIndexes(address,uint256)\":{\"notice\":\"Gets do-hard-work indexes.\"},\"flushSmartVault(address)\":{\"notice\":\"Flushes deposits and withdrawal for the next do-hard-work.\"},\"getLatestFlushIndex(address)\":{\"notice\":\"Gets latest flush index for a smart vault.\"},\"reallocate((address[],address[],(address,address,bytes)[][],uint256[][],uint256[][],uint256[2][],uint256))\":{\"notice\":\"Reallocates smart vaults.\"},\"recoverPendingDeposits(address)\":{\"notice\":\"Recovers pending deposits from smart vault to emergency wallet.\"},\"redeem((address,uint256,uint256[],uint256[]),address,bool)\":{\"notice\":\"Initiates a withdrawal process and mints a withdrawal NFT. Once all DHWs are executed, user can use the withdrawal NFT to claim the assets. Optionally, caller can pass a list of deposit NFTs to unwrap.\"},\"redeemFast((address,uint256,uint256[],uint256[]),uint256[][])\":{\"notice\":\"Instantly redeems smart vault shares for assets.\"},\"redeemFor((address,uint256,uint256[],uint256[]),address,bool)\":{\"notice\":\"Initiates a withdrawal process and mints a withdrawal NFT. Once all DHWs are executed, user can use the withdrawal NFT to claim the assets. Optionally, caller can pass a list of deposit NFTs to unwrap.\"},\"registerSmartVault(address,(uint256,address[],uint256,uint16,uint16,uint16))\":{\"notice\":\"Registers smart vault into the Spool protocol.\"},\"removeStrategyFromVaults(address,address[],bool)\":{\"notice\":\"Removes strategy from vaults, and optionally removes it from the system as well.\"},\"strategies(address)\":{\"notice\":\"Gets strategies used by a smart vault.\"},\"syncSmartVault(address,bool)\":{\"notice\":\"Syncs smart vault with strategies.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/interfaces/ISmartVaultManager.sol\":\"ISmartVaultManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":@solmate/=lib/solmate/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc-1155/=lib/erc-1155/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e037192cadfd20ad0f1b0c54a0c770a1ba551e7d0fcb6d3708e5ba352f88ded2\",\"dweb:/ipfs/QmTXwY6odV1ToDZAYxbbLKThe9M5PUWTmWBjwT776hH4qm\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol\":{\"keccak256\":\"0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1870980d15f9003916faf2a9a0eac6dcd4f0e28e2af6f5a3cee0cd685d460ee9\",\"dweb:/ipfs/QmY8K1YZQmuL2WDTPC8QwCm3ztrUD7JKmnvoZkMyGZceiM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2\",\"dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"src/interfaces/Constants.sol\":{\"keccak256\":\"0x354c9712029e417e8218a663e0a50aa5702654dd8b28ec3d1a708f15285c7645\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://108fc1846ce55526dbcb8e4de181a81f4b4bdc3890cc166fbdf01cd516d4d7dc\",\"dweb:/ipfs/Qmb44ebs1oXkjJfrjKRESTu8oqtSFZGXCMFViRn1uPFnRv\"]},\"src/interfaces/IDepositManager.sol\":{\"keccak256\":\"0xe39fbb3eaa842105d230590b7c4ecca3e41e064f4dac1d585ad0ec4da509f896\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e80ed57d320620e81fc6e9e9b5a87a516a922c695b44be563deef310de9a4f6d\",\"dweb:/ipfs/QmT8opCCERZMHFyaditEAYcwjtE3NYRpDJM76WT4z357D8\"]},\"src/interfaces/ISmartVault.sol\":{\"keccak256\":\"0x618c4bc3d61d20476c94505ea8f038357cc07075ba04ad824669287364256640\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://1b198b21f425e7a580fa14df7c0108a2856b0167b5b651069cc794d74e302172\",\"dweb:/ipfs/Qmcdd9BXbbAvfFRPSnBMv5gEUcTuTv4wRBk2Qvr3PkN3EX\"]},\"src/interfaces/ISmartVaultManager.sol\":{\"keccak256\":\"0x0b64b252fd58aaf546b27157eee8718db2e6c3c36cdb711485f9fb10a264ac92\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://974acd15991d41573d36b259d1513cdd4ea1452aa5111434a1dd5ace7b5860b3\",\"dweb:/ipfs/QmW5zP2rBJMzEicp3qzVw8Lmm51oLHGA2Jjk7itcUF4Y1U\"]},\"src/interfaces/ISwapper.sol\":{\"keccak256\":\"0x820318dbaec0f400857bff92141f4a1d535b9b6cdc785a91abc3ccf3bc2b1ba6\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://4e98660c54f87b382dd794d5fc653a1236128931780d253d1982a28e509de807\",\"dweb:/ipfs/QmUdTdep1APoHQY9AYDRnbcVHpPbQuqjbwfRQoNjwe2cXz\"]},\"src/interfaces/IWithdrawalManager.sol\":{\"keccak256\":\"0x04a062bce5be59ab8d3a6d586f2d5cd1b8ec5305c96becf7a3d8bc9511edfab2\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://508648e220a022ca728061a47b4708ae1ed1b8c592a693f3df3273b6baf75aed\",\"dweb:/ipfs/QmYpHn96feLhiFPTE9JFVga1Ug5dSF6M8ZHFZTVw2FHviy\"]},\"src/interfaces/RequestType.sol\":{\"keccak256\":\"0xf8ead75f2a92c46f64d650a8f53673504e75ced6327231d949350fcc74fc1e46\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://10963318cd7f1c6a531868a14ab614b4861d4ae1f5ccc0703212373d1a49ce26\",\"dweb:/ipfs/QmVsFbF49aeEH9BVPtxXasuRqgdR2uZpupW3MNz9dUw3Ny\"]},\"src/libraries/uint16a16Lib.sol\":{\"keccak256\":\"0xedd8d63135c7ac98d18545403342e7a6f2c4e9738271a0072451fe9fab8a7ed5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d0b09f9c07e7248b3d47dcf5b5fc4bcf47ebf6eb126bd5b9bc4e61dcc30f3\",\"dweb:/ipfs/QmSJPspGt9w87wdDn1t4dmFYnZJsz2U2rKYraMPdMX5nRB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "flushIndex",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SmartVaultFlushed",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint16a16",
              "name": "newAllocations",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SmartVaultReallocated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct SmartVaultRegistrationForm",
              "name": "registrationForm",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "assetGroupId",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint16a16",
                  "name": "strategyAllocation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint16",
                  "name": "managementFeePct",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "depositFeePct",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "performanceFeePct",
                  "type": "uint16"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SmartVaultRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "flushIndex",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SmartVaultSynced",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "strategy",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "vault",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "StrategyRemovedFromVault",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allocations",
          "outputs": [
            {
              "internalType": "uint16a16",
              "name": "allocation",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "assetGroupId",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "assetGroupId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVaultAddress",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "nftIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "nftAmounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimSmartVaultTokens",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "claimedAmount",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "nftIds",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "nftAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "claimWithdrawal",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "assetAmounts",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "assetGroupId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct DepositBag",
              "name": "bag",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "smartVault",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "assets",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "receiver",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "referral",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "doFlush",
                  "type": "bool"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "receipt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "depositRatio",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "ratio",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "flushIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "dhwIndexes",
          "outputs": [
            {
              "internalType": "uint16a16",
              "name": "dhwIndexes",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flushSmartVault"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getLatestFlushIndex",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "flushIndex",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct ReallocateParamBag",
              "name": "reallocateParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address[]",
                  "name": "smartVaults",
                  "type": "address[]"
                },
                {
                  "internalType": "address[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "struct SwapInfo[][]",
                  "name": "swapInfo",
                  "type": "tuple[][]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "swapTarget",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "swapCallData",
                      "type": "bytes"
                    }
                  ]
                },
                {
                  "internalType": "uint256[][]",
                  "name": "depositSlippages",
                  "type": "uint256[][]"
                },
                {
                  "internalType": "uint256[][]",
                  "name": "withdrawalSlippages",
                  "type": "uint256[][]"
                },
                {
                  "internalType": "uint256[2][]",
                  "name": "exchangeRateSlippages",
                  "type": "uint256[2][]"
                },
                {
                  "internalType": "uint256",
                  "name": "validUntil",
                  "type": "uint256"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "reallocate"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recoverPendingDeposits"
        },
        {
          "inputs": [
            {
              "internalType": "struct RedeemBag",
              "name": "bag",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "smartVault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "shares",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "nftIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "nftAmounts",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "doFlush",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeem",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "receipt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct RedeemBag",
              "name": "bag",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "smartVault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "shares",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "nftIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "nftAmounts",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "uint256[][]",
              "name": "withdrawalSlippages",
              "type": "uint256[][]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemFast",
          "outputs": [
            {
              "internalType": "uint256[]",
              "name": "withdrawnAssets",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct RedeemBag",
              "name": "bag",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "smartVault",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "shares",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "nftIds",
                  "type": "uint256[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "nftAmounts",
                  "type": "uint256[]"
                }
              ]
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "doFlush",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "redeemFor",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "receipt",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            },
            {
              "internalType": "struct SmartVaultRegistrationForm",
              "name": "registrationForm",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "assetGroupId",
                  "type": "uint256"
                },
                {
                  "internalType": "address[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint16a16",
                  "name": "strategyAllocation",
                  "type": "uint256"
                },
                {
                  "internalType": "uint16",
                  "name": "managementFeePct",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "depositFeePct",
                  "type": "uint16"
                },
                {
                  "internalType": "uint16",
                  "name": "performanceFeePct",
                  "type": "uint16"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerSmartVault"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "vaults",
              "type": "address[]"
            },
            {
              "internalType": "bool",
              "name": "disableStrategy",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeStrategyFromVaults"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "simulateSync",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "oldTotalSVTs",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "mintedSVTs",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "feeSVTs",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "sstShares",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "userAddress",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "nftIds",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "simulateSyncWithBurn",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "svts",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategies",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "strategies",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "smartVault",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revertIfError",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "syncSmartVault"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allocations(address)": {
            "params": {
              "smartVault": "Smart vault."
            },
            "returns": {
              "allocation": "Strategy allocation for the smart vault."
            }
          },
          "assetGroupId(address)": {
            "params": {
              "smartVault": "Smart vault."
            },
            "returns": {
              "assetGroupId": "ID of the asset group used by the smart vault."
            }
          },
          "claimSmartVaultTokens(address,uint256[],uint256[])": {
            "details": "Requirements: - deposit NFT must be valid - flush must be synced",
            "params": {
              "nftAmounts": "amounts",
              "nftIds": "ID of the deposit NFT to burn.",
              "smartVaultAddress": "Address of the smart vault that issued the deposit NFT."
            },
            "returns": {
              "claimedAmount": "Amount of smart vault tokens claimed."
            }
          },
          "claimWithdrawal(address,uint256[],uint256[],address)": {
            "details": "Requirements: - withdrawal NFT must be valid",
            "params": {
              "nftAmounts": "amounts",
              "nftIds": "ID of withdrawal NFT to burn.",
              "receiver": "Receiver of claimed assets.",
              "smartVault": "Address of the smart vault that issued the withdrawal NFT."
            },
            "returns": {
              "assetAmounts": "Amounts of assets claimed.",
              "assetGroupId": "ID of the asset group."
            }
          },
          "deposit((address,uint256[],address,address,bool))": {
            "params": {
              "bag": "smartVault address, assets, NFT receiver address, referral address, doFlush"
            },
            "returns": {
              "receipt": "ID of the receipt deposit NFT."
            }
          },
          "depositRatio(address)": {
            "params": {
              "smartVault": "Smart vault."
            },
            "returns": {
              "ratio": "Required deposit ratio for the smart vault."
            }
          },
          "dhwIndexes(address,uint256)": {
            "params": {
              "flushIndex": "Flush index.",
              "smartVault": "Smart vault."
            },
            "returns": {
              "dhwIndexes": "Do-hard-work indexes for flush index of the smart vault."
            }
          },
          "flushSmartVault(address)": {
            "params": {
              "smartVault": "Smart vault to flush."
            }
          },
          "getLatestFlushIndex(address)": {
            "params": {
              "smartVault": "Smart vault."
            },
            "returns": {
              "flushIndex": "Latest flush index for the smart vault."
            }
          },
          "reallocate((address[],address[],(address,address,bytes)[][],uint256[][],uint256[][],uint256[2][],uint256))": {
            "details": "Requirements: - caller must have a ROLE_REALLOCATOR role - smart vaults must be registered - smart vaults must use same asset group - strategies must represent a set of strategies used by smart vaults",
            "params": {
              "reallocateParams": "Paramaters for reallocation."
            }
          },
          "recoverPendingDeposits(address)": {
            "details": "Requirements: - caller must have role ROLE_SPOOL_ADMIN - all strategies of the smart vault need to be ghost strategies",
            "params": {
              "smartVault": "Smart vault from which to recover pending deposits."
            }
          },
          "redeem((address,uint256,uint256[],uint256[]),address,bool)": {
            "params": {
              "bag": "smart vault address, amount of shares to redeem, nft ids and amounts to burn",
              "doFlush": "optionally flush the smart vault",
              "receiver": "address that will receive the withdrawal NFT"
            },
            "returns": {
              "receipt": "ID of the receipt withdrawal NFT."
            }
          },
          "redeemFast((address,uint256,uint256[],uint256[]),uint256[][])": {
            "params": {
              "bag": "Parameters for fast redeemal.",
              "withdrawalSlippages": "Slippages guarding redeemal."
            },
            "returns": {
              "withdrawnAssets": "Amount of assets withdrawn."
            }
          },
          "redeemFor((address,uint256,uint256[],uint256[]),address,bool)": {
            "params": {
              "bag": "smart vault address, amount of shares to redeem, nft ids and amounts to burn",
              "doFlush": "optionally flush the smart vault",
              "owner": "address that owns the shares to be redeemed and will receive the withdrawal NFT"
            },
            "returns": {
              "receipt": "ID of the receipt withdrawal NFT."
            }
          },
          "registerSmartVault(address,(uint256,address[],uint256,uint16,uint16,uint16))": {
            "details": "Requirements: - caller must have role ROLE_SMART_VAULT_INTEGRATOR",
            "params": {
              "registrationForm": "Form with information for registration.",
              "smartVault": "Smart vault to register."
            }
          },
          "removeStrategyFromVaults(address,address[],bool)": {
            "details": "Requirements: - caller must have role ROLE_SPOOL_ADMIN - the strategy has to be active (requires ROLE_STRATEGY)",
            "params": {
              "disableStrategy": "Also disable the strategy across the system",
              "strategy": "Strategy address to remove.",
              "vaults": "Array of vaults from which to remove the strategy"
            }
          },
          "simulateSync(address)": {
            "details": "Calculate number of SVTs that haven't been synced yet after DHW runs DHW has minted strategy shares, but vaults haven't claimed them yet. Includes management fees (percentage of assets under management, distributed throughout a year) and deposit fees . Invariants: - There can't be more than once un-synced flush index per vault at any given time. - Flush index can't be synced, if all DHWs haven't been completed yet. Can be used to retrieve the number of SSTs the vault would claim during sync.",
            "params": {
              "smartVault": "SmartVault address"
            },
            "returns": {
              "feeSVTs": "Amount of SVTs pertaining to fees",
              "mintedSVTs": "Amount of SVTs minted during sync",
              "oldTotalSVTs": "Amount of SVTs before sync",
              "sstShares": "Amount of SSTs claimed per strategy"
            }
          },
          "simulateSyncWithBurn(address,address,uint256[])": {
            "details": "Simulate sync when burning dNFTs and return their svts value.",
            "params": {
              "nftIds": "Ids of dNFTs",
              "smartVault": "SmartVault address",
              "userAddress": "User address that owns dNFTs"
            },
            "returns": {
              "svts": "Amount of svts user would get if he burns dNFTs"
            }
          },
          "strategies(address)": {
            "params": {
              "smartVault": "Smart vault."
            },
            "returns": {
              "strategies": "Strategies for the smart vault."
            }
          },
          "syncSmartVault(address,bool)": {
            "params": {
              "revertIfError": "If true, sync will revert if every flush index cannot be synced; if false it will sync all flush indexes it can.",
              "smartVault": "Smart vault to sync."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allocations(address)": {
            "notice": "Gets strategy allocation for a smart vault."
          },
          "assetGroupId(address)": {
            "notice": "Gets asest group used by a smart vault."
          },
          "claimSmartVaultTokens(address,uint256[],uint256[])": {
            "notice": "Claims smart vault tokens by burning the deposit NFT."
          },
          "claimWithdrawal(address,uint256[],uint256[],address)": {
            "notice": "Claims withdrawal of assets by burning withdrawal NFT."
          },
          "deposit((address,uint256[],address,address,bool))": {
            "notice": "Initiated a deposit and mints a deposit NFT. Once all DHWs are executed, user can unwrap the deposit NDF and claim his SVTs."
          },
          "depositRatio(address)": {
            "notice": "Gets required deposit ratio for a smart vault."
          },
          "dhwIndexes(address,uint256)": {
            "notice": "Gets do-hard-work indexes."
          },
          "flushSmartVault(address)": {
            "notice": "Flushes deposits and withdrawal for the next do-hard-work."
          },
          "getLatestFlushIndex(address)": {
            "notice": "Gets latest flush index for a smart vault."
          },
          "reallocate((address[],address[],(address,address,bytes)[][],uint256[][],uint256[][],uint256[2][],uint256))": {
            "notice": "Reallocates smart vaults."
          },
          "recoverPendingDeposits(address)": {
            "notice": "Recovers pending deposits from smart vault to emergency wallet."
          },
          "redeem((address,uint256,uint256[],uint256[]),address,bool)": {
            "notice": "Initiates a withdrawal process and mints a withdrawal NFT. Once all DHWs are executed, user can use the withdrawal NFT to claim the assets. Optionally, caller can pass a list of deposit NFTs to unwrap."
          },
          "redeemFast((address,uint256,uint256[],uint256[]),uint256[][])": {
            "notice": "Instantly redeems smart vault shares for assets."
          },
          "redeemFor((address,uint256,uint256[],uint256[]),address,bool)": {
            "notice": "Initiates a withdrawal process and mints a withdrawal NFT. Once all DHWs are executed, user can use the withdrawal NFT to claim the assets. Optionally, caller can pass a list of deposit NFTs to unwrap."
          },
          "registerSmartVault(address,(uint256,address[],uint256,uint16,uint16,uint16))": {
            "notice": "Registers smart vault into the Spool protocol."
          },
          "removeStrategyFromVaults(address,address[],bool)": {
            "notice": "Removes strategy from vaults, and optionally removes it from the system as well."
          },
          "strategies(address)": {
            "notice": "Gets strategies used by a smart vault."
          },
          "syncSmartVault(address,bool)": {
            "notice": "Syncs smart vault with strategies."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/contracts/",
        ":@solmate/=lib/solmate/src/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc-1155/=lib/erc-1155/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/interfaces/ISmartVaultManager.sol": "ISmartVaultManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155Upgradeable.sol": {
        "keccak256": "0x091a49ef99a2be002680781a10cc9dd74c0f348301ede5482c4ea625f79a8ffe",
        "urls": [
          "bzz-raw://e037192cadfd20ad0f1b0c54a0c770a1ba551e7d0fcb6d3708e5ba352f88ded2",
          "dweb:/ipfs/QmTXwY6odV1ToDZAYxbbLKThe9M5PUWTmWBjwT776hH4qm"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/extensions/IERC1155MetadataURIUpgradeable.sol": {
        "keccak256": "0xa350df12a8c10e821af05e0863f44e8317a0efa44df27bfd5dc1d63fdfa3c448",
        "urls": [
          "bzz-raw://1870980d15f9003916faf2a9a0eac6dcd4f0e28e2af6f5a3cee0cd685d460ee9",
          "dweb:/ipfs/QmY8K1YZQmuL2WDTPC8QwCm3ztrUD7JKmnvoZkMyGZceiM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC20/IERC20Upgradeable.sol": {
        "keccak256": "0x4e733d3164f73f461eaf9d8087a7ad1ea180bdc8ba0d3d61b0e1ae16d8e63dff",
        "urls": [
          "bzz-raw://75b47c3aeca7b66ea6752f8be020ec5c1c502de6ec9065272dae23d3a52196e2",
          "dweb:/ipfs/QmUebPMHv16tYKFh5BmBQkMfRFb5b8UZ2RgVwdjxCeufVF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "src/interfaces/Constants.sol": {
        "keccak256": "0x354c9712029e417e8218a663e0a50aa5702654dd8b28ec3d1a708f15285c7645",
        "urls": [
          "bzz-raw://108fc1846ce55526dbcb8e4de181a81f4b4bdc3890cc166fbdf01cd516d4d7dc",
          "dweb:/ipfs/Qmb44ebs1oXkjJfrjKRESTu8oqtSFZGXCMFViRn1uPFnRv"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IDepositManager.sol": {
        "keccak256": "0xe39fbb3eaa842105d230590b7c4ecca3e41e064f4dac1d585ad0ec4da509f896",
        "urls": [
          "bzz-raw://e80ed57d320620e81fc6e9e9b5a87a516a922c695b44be563deef310de9a4f6d",
          "dweb:/ipfs/QmT8opCCERZMHFyaditEAYcwjtE3NYRpDJM76WT4z357D8"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ISmartVault.sol": {
        "keccak256": "0x618c4bc3d61d20476c94505ea8f038357cc07075ba04ad824669287364256640",
        "urls": [
          "bzz-raw://1b198b21f425e7a580fa14df7c0108a2856b0167b5b651069cc794d74e302172",
          "dweb:/ipfs/Qmcdd9BXbbAvfFRPSnBMv5gEUcTuTv4wRBk2Qvr3PkN3EX"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ISmartVaultManager.sol": {
        "keccak256": "0x0b64b252fd58aaf546b27157eee8718db2e6c3c36cdb711485f9fb10a264ac92",
        "urls": [
          "bzz-raw://974acd15991d41573d36b259d1513cdd4ea1452aa5111434a1dd5ace7b5860b3",
          "dweb:/ipfs/QmW5zP2rBJMzEicp3qzVw8Lmm51oLHGA2Jjk7itcUF4Y1U"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/ISwapper.sol": {
        "keccak256": "0x820318dbaec0f400857bff92141f4a1d535b9b6cdc785a91abc3ccf3bc2b1ba6",
        "urls": [
          "bzz-raw://4e98660c54f87b382dd794d5fc653a1236128931780d253d1982a28e509de807",
          "dweb:/ipfs/QmUdTdep1APoHQY9AYDRnbcVHpPbQuqjbwfRQoNjwe2cXz"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/IWithdrawalManager.sol": {
        "keccak256": "0x04a062bce5be59ab8d3a6d586f2d5cd1b8ec5305c96becf7a3d8bc9511edfab2",
        "urls": [
          "bzz-raw://508648e220a022ca728061a47b4708ae1ed1b8c592a693f3df3273b6baf75aed",
          "dweb:/ipfs/QmYpHn96feLhiFPTE9JFVga1Ug5dSF6M8ZHFZTVw2FHviy"
        ],
        "license": "BUSL-1.1"
      },
      "src/interfaces/RequestType.sol": {
        "keccak256": "0xf8ead75f2a92c46f64d650a8f53673504e75ced6327231d949350fcc74fc1e46",
        "urls": [
          "bzz-raw://10963318cd7f1c6a531868a14ab614b4861d4ae1f5ccc0703212373d1a49ce26",
          "dweb:/ipfs/QmVsFbF49aeEH9BVPtxXasuRqgdR2uZpupW3MNz9dUw3Ny"
        ],
        "license": "BUSL-1.1"
      },
      "src/libraries/uint16a16Lib.sol": {
        "keccak256": "0xedd8d63135c7ac98d18545403342e7a6f2c4e9738271a0072451fe9fab8a7ed5",
        "urls": [
          "bzz-raw://b81d0b09f9c07e7248b3d47dcf5b5fc4bcf47ebf6eb126bd5b9bc4e61dcc30f3",
          "dweb:/ipfs/QmSJPspGt9w87wdDn1t4dmFYnZJsz2U2rKYraMPdMX5nRB"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/interfaces/ISmartVaultManager.sol",
    "id": 51826,
    "exportedSymbols": {
      "DEPOSIT_FEE_MAX": [
        50094
      ],
      "DepositBag": [
        50452
      ],
      "DepositExtras": [
        50466
      ],
      "DepositFeeTooLarge": [
        51514
      ],
      "DepositIdOverflow": [
        51289
      ],
      "DepositMetadata": [
        51323
      ],
      "DepositSyncResult": [
        50481
      ],
      "ECOSYSTEM_FEE_MAX": [
        50102
      ],
      "ExchangeNotAllowed": [
        52766
      ],
      "FULL_PERCENT": [
        50069
      ],
      "FULL_PERCENT_INT": [
        50073
      ],
      "FlushIndex": [
        51573
      ],
      "GhostVault": [
        51523
      ],
      "IDepositManager": [
        50700
      ],
      "IERC1155MetadataURIUpgradeable": [
        28345
      ],
      "IERC1155Upgradeable": [
        28330
      ],
      "IERC165Upgradeable": [
        30429
      ],
      "IERC20Upgradeable": [
        29035
      ],
      "INITIAL_LOCKED_SHARES": [
        50172
      ],
      "INITIAL_LOCKED_SHARES_ADDRESS": [
        50179
      ],
      "INITIAL_SHARE_MULTIPLIER": [
        50166
      ],
      "ISmartVault": [
        51474
      ],
      "ISmartVaultManager": [
        51825
      ],
      "ISmartVaultRegistry": [
        51583
      ],
      "ISwapper": [
        52832
      ],
      "IWithdrawalManager": [
        53105
      ],
      "InsufficientBalance": [
        51487
      ],
      "InvalidAssetLengths": [
        50431
      ],
      "InvalidDepositNftId": [
        51297
      ],
      "InvalidNftArrayLength": [
        50434
      ],
      "InvalidNftBalance": [
        51307
      ],
      "InvalidNftTransferAmount": [
        51312
      ],
      "InvalidWithdrawalNftId": [
        51302
      ],
      "MANAGEMENT_FEE_MAX": [
        50090
      ],
      "MAXIMAL_DEPOSIT_ID": [
        50140
      ],
      "MAXIMAL_WITHDRAWAL_ID": [
        50148
      ],
      "MAX_ACTION_COUNT": [
        50187
      ],
      "MAX_DHW_BASE_YIELD_LIMIT": [
        50162
      ],
      "MAX_GUARD_COUNT": [
        50183
      ],
      "MAX_RISK_SCORE": [
        50110
      ],
      "MAX_RISK_TOLERANCE": [
        50118
      ],
      "MIN_RISK_SCORE": [
        50114
      ],
      "MIN_RISK_TOLERANCE": [
        50123
      ],
      "ManagementFeeTooLarge": [
        51501
      ],
      "NFT_MINTED_SHARES": [
        50154
      ],
      "NULL_ASSET_GROUP_ID": [
        50191
      ],
      "NoDepositsToRecover": [
        50437
      ],
      "NotGhostVault": [
        50440
      ],
      "NotSwapper": [
        52771
      ],
      "NothingToFlush": [
        51490
      ],
      "PerformanceFeeTooLarge": [
        51506
      ],
      "ReallocateParamBag": [
        51568
      ],
      "ReallocationParametersExpired": [
        51526
      ],
      "RedeemBag": [
        52944
      ],
      "RedeemExtras": [
        52968
      ],
      "RedeemFastExtras": [
        52959
      ],
      "RedeemForNotAllowed": [
        51517
      ],
      "RequestType": [
        53113
      ],
      "SECONDS_IN_YEAR": [
        50061
      ],
      "SECONDS_IN_YEAR_INT": [
        50065
      ],
      "STATIC_RISK_PROVIDER": [
        50130
      ],
      "STATIC_RISK_SCORE": [
        50134
      ],
      "STRATEGY_COUNT_CAP": [
        50158
      ],
      "SV_PERFORMANCE_FEE_MAX": [
        50098
      ],
      "SenderEqualsRecipient": [
        51315
      ],
      "SimulateDepositParams": [
        50503
      ],
      "SmartVaultAlreadyRegistered": [
        51493
      ],
      "SmartVaultFees": [
        51335
      ],
      "SmartVaultNotRegisteredYet": [
        51496
      ],
      "SmartVaultRegistrationForm": [
        51541
      ],
      "StaticAllocationSmartVault": [
        51509
      ],
      "SwapInfo": [
        52761
      ],
      "TREASURY_FEE_MAX": [
        50106
      ],
      "VaultNotSynced": [
        51520
      ],
      "WithdrawalClaimBag": [
        52988
      ],
      "WithdrawalIdOverflow": [
        51292
      ],
      "WithdrawalMetadata": [
        51328
      ],
      "WithdrawalNftNotSyncedYet": [
        52933
      ],
      "YIELD_FULL_PERCENT": [
        50086
      ],
      "YIELD_FULL_PERCENT_INT": [
        50079
      ],
      "uint16a16": [
        55783
      ],
      "uint16a16Lib": [
        55925
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:13996:123",
    "nodes": [
      {
        "id": 51476,
        "nodeType": "PragmaDirective",
        "src": "37:23:123",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ]
      },
      {
        "id": 51477,
        "nodeType": "ImportDirective",
        "src": "62:31:123",
        "nodes": [],
        "absolutePath": "src/interfaces/IDepositManager.sol",
        "file": "./IDepositManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51826,
        "sourceUnit": 50701,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51478,
        "nodeType": "ImportDirective",
        "src": "94:27:123",
        "nodes": [],
        "absolutePath": "src/interfaces/ISmartVault.sol",
        "file": "./ISmartVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51826,
        "sourceUnit": 51475,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51479,
        "nodeType": "ImportDirective",
        "src": "122:24:123",
        "nodes": [],
        "absolutePath": "src/interfaces/ISwapper.sol",
        "file": "./ISwapper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51826,
        "sourceUnit": 52833,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51480,
        "nodeType": "ImportDirective",
        "src": "147:34:123",
        "nodes": [],
        "absolutePath": "src/interfaces/IWithdrawalManager.sol",
        "file": "./IWithdrawalManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 51826,
        "sourceUnit": 53106,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 51487,
        "nodeType": "ErrorDefinition",
        "src": "302:63:123",
        "nodes": [],
        "documentation": {
          "id": 51481,
          "nodeType": "StructuredDocumentation",
          "src": "219:82:123",
          "text": " @notice Used when user has insufficient balance for redeemal of shares."
        },
        "errorSelector": "cf479181",
        "name": "InsufficientBalance",
        "nameLocation": "308:19:123",
        "parameters": {
          "id": 51486,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 51483,
              "mutability": "mutable",
              "name": "available",
              "nameLocation": "336:9:123",
              "nodeType": "VariableDeclaration",
              "scope": 51487,
              "src": "328:17:123",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 51482,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "328:7:123",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            },
            {
              "constant": false,
              "id": 51485,
              "mutability": "mutable",
              "name": "required",
              "nameLocation": "355:8:123",
              "nodeType": "VariableDeclaration",
              "scope": 51487,
              "src": "347:16:123",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 51484,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "347:7:123",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "327:37:123"
        }
      },
      {
        "id": 51490,
        "nodeType": "ErrorDefinition",
        "src": "423:23:123",
        "nodes": [],
        "documentation": {
          "id": 51488,
          "nodeType": "StructuredDocumentation",
          "src": "367:55:123",
          "text": " @notice Used when there is nothing to flush."
        },
        "errorSelector": "eb694a3c",
        "name": "NothingToFlush",
        "nameLocation": "429:14:123",
        "parameters": {
          "id": 51489,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "443:2:123"
        }
      },
      {
        "id": 51493,
        "nodeType": "ErrorDefinition",
        "src": "539:36:123",
        "nodes": [],
        "documentation": {
          "id": 51491,
          "nodeType": "StructuredDocumentation",
          "src": "448:90:123",
          "text": " @notice Used when trying to register a smart vault that was already registered."
        },
        "errorSelector": "dafba3c4",
        "name": "SmartVaultAlreadyRegistered",
        "nameLocation": "545:27:123",
        "parameters": {
          "id": 51492,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "572:2:123"
        }
      },
      {
        "id": 51496,
        "nodeType": "ErrorDefinition",
        "src": "679:35:123",
        "nodes": [],
        "documentation": {
          "id": 51494,
          "nodeType": "StructuredDocumentation",
          "src": "577:101:123",
          "text": " @notice Used when trying to perform an action for smart vault that was not registered yet."
        },
        "errorSelector": "cbf256f3",
        "name": "SmartVaultNotRegisteredYet",
        "nameLocation": "685:26:123",
        "parameters": {
          "id": 51495,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "711:2:123"
        }
      },
      {
        "id": 51501,
        "nodeType": "ErrorDefinition",
        "src": "808:48:123",
        "nodes": [],
        "documentation": {
          "id": 51497,
          "nodeType": "StructuredDocumentation",
          "src": "716:91:123",
          "text": " @notice Used when user tries to configure a vault with too large management fee."
        },
        "errorSelector": "ab5e6584",
        "name": "ManagementFeeTooLarge",
        "nameLocation": "814:21:123",
        "parameters": {
          "id": 51500,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 51499,
              "mutability": "mutable",
              "name": "mgmtFeePct",
              "nameLocation": "844:10:123",
              "nodeType": "VariableDeclaration",
              "scope": 51501,
              "src": "836:18:123",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 51498,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "836:7:123",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "835:20:123"
        }
      },
      {
        "id": 51506,
        "nodeType": "ErrorDefinition",
        "src": "951:56:123",
        "nodes": [],
        "documentation": {
          "id": 51502,
          "nodeType": "StructuredDocumentation",
          "src": "858:92:123",
          "text": " @notice Used when user tries to configure a vault with too large performance fee."
        },
        "errorSelector": "af603d45",
        "name": "PerformanceFeeTooLarge",
        "nameLocation": "957:22:123",
        "parameters": {
          "id": 51505,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 51504,
              "mutability": "mutable",
              "name": "performanceFeePct",
              "nameLocation": "988:17:123",
              "nodeType": "VariableDeclaration",
              "scope": 51506,
              "src": "980:25:123",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 51503,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "980:7:123",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "979:27:123"
        }
      },
      {
        "id": 51509,
        "nodeType": "ErrorDefinition",
        "src": "1097:35:123",
        "nodes": [],
        "documentation": {
          "id": 51507,
          "nodeType": "StructuredDocumentation",
          "src": "1009:87:123",
          "text": " @notice Used when smart vault in reallocation has statically set allocation."
        },
        "errorSelector": "337ce502",
        "name": "StaticAllocationSmartVault",
        "nameLocation": "1103:26:123",
        "parameters": {
          "id": 51508,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1129:2:123"
        }
      },
      {
        "id": 51514,
        "nodeType": "ErrorDefinition",
        "src": "1223:48:123",
        "nodes": [],
        "documentation": {
          "id": 51510,
          "nodeType": "StructuredDocumentation",
          "src": "1134:88:123",
          "text": " @notice Used when user tries to configure a vault with too large deposit fee."
        },
        "errorSelector": "37291fce",
        "name": "DepositFeeTooLarge",
        "nameLocation": "1229:18:123",
        "parameters": {
          "id": 51513,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 51512,
              "mutability": "mutable",
              "name": "depositFeePct",
              "nameLocation": "1256:13:123",
              "nodeType": "VariableDeclaration",
              "scope": 51514,
              "src": "1248:21:123",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "typeName": {
                "id": 51511,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1248:7:123",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "1247:23:123"
        }
      },
      {
        "id": 51517,
        "nodeType": "ErrorDefinition",
        "src": "1381:28:123",
        "nodes": [],
        "documentation": {
          "id": 51515,
          "nodeType": "StructuredDocumentation",
          "src": "1273:107:123",
          "text": " @notice Used when user tries redeem on behalf of another user, but the vault does not support it"
        },
        "errorSelector": "b6ad2a37",
        "name": "RedeemForNotAllowed",
        "nameLocation": "1387:19:123",
        "parameters": {
          "id": 51516,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1406:2:123"
        }
      },
      {
        "id": 51520,
        "nodeType": "ErrorDefinition",
        "src": "1495:23:123",
        "nodes": [],
        "documentation": {
          "id": 51518,
          "nodeType": "StructuredDocumentation",
          "src": "1411:83:123",
          "text": " @notice Used when trying to flush a vault that still needs to be synced."
        },
        "errorSelector": "835fa209",
        "name": "VaultNotSynced",
        "nameLocation": "1501:14:123",
        "parameters": {
          "id": 51519,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1515:2:123"
        }
      },
      {
        "id": 51523,
        "nodeType": "ErrorDefinition",
        "src": "1641:19:123",
        "nodes": [],
        "documentation": {
          "id": 51521,
          "nodeType": "StructuredDocumentation",
          "src": "1520:120:123",
          "text": " @notice Used when trying to deposit into, redeem from, or flush a smart vault that has only ghost strategies."
        },
        "errorSelector": "08c6ead3",
        "name": "GhostVault",
        "nameLocation": "1647:10:123",
        "parameters": {
          "id": 51522,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1657:2:123"
        }
      },
      {
        "id": 51526,
        "nodeType": "ErrorDefinition",
        "src": "1739:38:123",
        "nodes": [],
        "documentation": {
          "id": 51524,
          "nodeType": "StructuredDocumentation",
          "src": "1662:76:123",
          "text": " @notice Used when reallocation is called with expired parameters."
        },
        "errorSelector": "ffea2f96",
        "name": "ReallocationParametersExpired",
        "nameLocation": "1745:29:123",
        "parameters": {
          "id": 51525,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1774:2:123"
        }
      },
      {
        "id": 51541,
        "nodeType": "StructDefinition",
        "src": "2339:208:123",
        "nodes": [],
        "canonicalName": "SmartVaultRegistrationForm",
        "members": [
          {
            "constant": false,
            "id": 51528,
            "mutability": "mutable",
            "name": "assetGroupId",
            "nameLocation": "2387:12:123",
            "nodeType": "VariableDeclaration",
            "scope": 51541,
            "src": "2379:20:123",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 51527,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2379:7:123",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51531,
            "mutability": "mutable",
            "name": "strategies",
            "nameLocation": "2415:10:123",
            "nodeType": "VariableDeclaration",
            "scope": 51541,
            "src": "2405:20:123",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 51529,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2405:7:123",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 51530,
              "nodeType": "ArrayTypeName",
              "src": "2405:9:123",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51534,
            "mutability": "mutable",
            "name": "strategyAllocation",
            "nameLocation": "2441:18:123",
            "nodeType": "VariableDeclaration",
            "scope": 51541,
            "src": "2431:28:123",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_userDefinedValueType$_uint16a16_$55783",
              "typeString": "uint16a16"
            },
            "typeName": {
              "id": 51533,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 51532,
                "name": "uint16a16",
                "nameLocations": [
                  "2431:9:123"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 55783,
                "src": "2431:9:123"
              },
              "referencedDeclaration": 55783,
              "src": "2431:9:123",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_uint16a16_$55783",
                "typeString": "uint16a16"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51536,
            "mutability": "mutable",
            "name": "managementFeePct",
            "nameLocation": "2472:16:123",
            "nodeType": "VariableDeclaration",
            "scope": 51541,
            "src": "2465:23:123",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 51535,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "2465:6:123",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51538,
            "mutability": "mutable",
            "name": "depositFeePct",
            "nameLocation": "2501:13:123",
            "nodeType": "VariableDeclaration",
            "scope": 51541,
            "src": "2494:20:123",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 51537,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "2494:6:123",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51540,
            "mutability": "mutable",
            "name": "performanceFeePct",
            "nameLocation": "2527:17:123",
            "nodeType": "VariableDeclaration",
            "scope": 51541,
            "src": "2520:24:123",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 51539,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "2520:6:123",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "SmartVaultRegistrationForm",
        "nameLocation": "2346:26:123",
        "scope": 51826,
        "visibility": "public"
      },
      {
        "id": 51568,
        "nodeType": "StructDefinition",
        "src": "3306:244:123",
        "nodes": [],
        "canonicalName": "ReallocateParamBag",
        "members": [
          {
            "constant": false,
            "id": 51544,
            "mutability": "mutable",
            "name": "smartVaults",
            "nameLocation": "3348:11:123",
            "nodeType": "VariableDeclaration",
            "scope": 51568,
            "src": "3338:21:123",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 51542,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3338:7:123",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 51543,
              "nodeType": "ArrayTypeName",
              "src": "3338:9:123",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51547,
            "mutability": "mutable",
            "name": "strategies",
            "nameLocation": "3375:10:123",
            "nodeType": "VariableDeclaration",
            "scope": 51568,
            "src": "3365:20:123",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 51545,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3365:7:123",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 51546,
              "nodeType": "ArrayTypeName",
              "src": "3365:9:123",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51552,
            "mutability": "mutable",
            "name": "swapInfo",
            "nameLocation": "3404:8:123",
            "nodeType": "VariableDeclaration",
            "scope": 51568,
            "src": "3391:21:123",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_array$_t_struct$_SwapInfo_$52761_storage_$dyn_storage_$dyn_storage_ptr",
              "typeString": "struct SwapInfo[][]"
            },
            "typeName": {
              "baseType": {
                "baseType": {
                  "id": 51549,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 51548,
                    "name": "SwapInfo",
                    "nameLocations": [
                      "3391:8:123"
                    ],
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 52761,
                    "src": "3391:8:123"
                  },
                  "referencedDeclaration": 52761,
                  "src": "3391:8:123",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SwapInfo_$52761_storage_ptr",
                    "typeString": "struct SwapInfo"
                  }
                },
                "id": 51550,
                "nodeType": "ArrayTypeName",
                "src": "3391:10:123",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_SwapInfo_$52761_storage_$dyn_storage_ptr",
                  "typeString": "struct SwapInfo[]"
                }
              },
              "id": 51551,
              "nodeType": "ArrayTypeName",
              "src": "3391:12:123",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_array$_t_struct$_SwapInfo_$52761_storage_$dyn_storage_$dyn_storage_ptr",
                "typeString": "struct SwapInfo[][]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51556,
            "mutability": "mutable",
            "name": "depositSlippages",
            "nameLocation": "3430:16:123",
            "nodeType": "VariableDeclaration",
            "scope": 51568,
            "src": "3418:28:123",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
              "typeString": "uint256[][]"
            },
            "typeName": {
              "baseType": {
                "baseType": {
                  "id": 51553,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3418:7:123",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 51554,
                "nodeType": "ArrayTypeName",
                "src": "3418:9:123",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              },
              "id": 51555,
              "nodeType": "ArrayTypeName",
              "src": "3418:11:123",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                "typeString": "uint256[][]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51560,
            "mutability": "mutable",
            "name": "withdrawalSlippages",
            "nameLocation": "3464:19:123",
            "nodeType": "VariableDeclaration",
            "scope": 51568,
            "src": "3452:31:123",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
              "typeString": "uint256[][]"
            },
            "typeName": {
              "baseType": {
                "baseType": {
                  "id": 51557,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3452:7:123",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 51558,
                "nodeType": "ArrayTypeName",
                "src": "3452:9:123",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                  "typeString": "uint256[]"
                }
              },
              "id": 51559,
              "nodeType": "ArrayTypeName",
              "src": "3452:11:123",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                "typeString": "uint256[][]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51565,
            "mutability": "mutable",
            "name": "exchangeRateSlippages",
            "nameLocation": "3502:21:123",
            "nodeType": "VariableDeclaration",
            "scope": 51568,
            "src": "3489:34:123",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$dyn_storage_ptr",
              "typeString": "uint256[2][]"
            },
            "typeName": {
              "baseType": {
                "baseType": {
                  "id": 51561,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3489:7:123",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "id": 51563,
                "length": {
                  "hexValue": "32",
                  "id": 51562,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3497:1:123",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_2_by_1",
                    "typeString": "int_const 2"
                  },
                  "value": "2"
                },
                "nodeType": "ArrayTypeName",
                "src": "3489:10:123",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                  "typeString": "uint256[2]"
                }
              },
              "id": 51564,
              "nodeType": "ArrayTypeName",
              "src": "3489:12:123",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_array$_t_uint256_$2_storage_$dyn_storage_ptr",
                "typeString": "uint256[2][]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51567,
            "mutability": "mutable",
            "name": "validUntil",
            "nameLocation": "3537:10:123",
            "nodeType": "VariableDeclaration",
            "scope": 51568,
            "src": "3529:18:123",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 51566,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3529:7:123",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "ReallocateParamBag",
        "nameLocation": "3313:18:123",
        "scope": 51826,
        "visibility": "public"
      },
      {
        "id": 51573,
        "nodeType": "StructDefinition",
        "src": "3552:62:123",
        "nodes": [],
        "canonicalName": "FlushIndex",
        "members": [
          {
            "constant": false,
            "id": 51570,
            "mutability": "mutable",
            "name": "current",
            "nameLocation": "3584:7:123",
            "nodeType": "VariableDeclaration",
            "scope": 51573,
            "src": "3576:15:123",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 51569,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "3576:7:123",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 51572,
            "mutability": "mutable",
            "name": "toSync",
            "nameLocation": "3605:6:123",
            "nodeType": "VariableDeclaration",
            "scope": 51573,
            "src": "3597:14:123",
            "stateVariable": false,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint128",
              "typeString": "uint128"
            },
            "typeName": {
              "id": 51571,
              "name": "uint128",
              "nodeType": "ElementaryTypeName",
              "src": "3597:7:123",
              "typeDescriptions": {
                "typeIdentifier": "t_uint128",
                "typeString": "uint128"
              }
            },
            "visibility": "internal"
          }
        ],
        "name": "FlushIndex",
        "nameLocation": "3559:10:123",
        "scope": 51826,
        "visibility": "public"
      },
      {
        "id": 51583,
        "nodeType": "ContractDefinition",
        "src": "3656:433:123",
        "nodes": [
          {
            "id": 51582,
            "nodeType": "FunctionDefinition",
            "src": "3976:111:123",
            "nodes": [],
            "documentation": {
              "id": 51574,
              "nodeType": "StructuredDocumentation",
              "src": "3692:279:123",
              "text": " @notice Registers smart vault into the Spool protocol.\n @dev Requirements:\n - caller must have role ROLE_SMART_VAULT_INTEGRATOR\n @param smartVault Smart vault to register.\n @param registrationForm Form with information for registration."
            },
            "functionSelector": "146c6743",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "registerSmartVault",
            "nameLocation": "3985:18:123",
            "parameters": {
              "id": 51580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51576,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "4012:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51582,
                  "src": "4004:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51575,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4004:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51579,
                  "mutability": "mutable",
                  "name": "registrationForm",
                  "nameLocation": "4060:16:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51582,
                  "src": "4024:52:123",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SmartVaultRegistrationForm_$51541_calldata_ptr",
                    "typeString": "struct SmartVaultRegistrationForm"
                  },
                  "typeName": {
                    "id": 51578,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51577,
                      "name": "SmartVaultRegistrationForm",
                      "nameLocations": [
                        "4024:26:123"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51541,
                      "src": "4024:26:123"
                    },
                    "referencedDeclaration": 51541,
                    "src": "4024:26:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SmartVaultRegistrationForm_$51541_storage_ptr",
                      "typeString": "struct SmartVaultRegistrationForm"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4003:74:123"
            },
            "returnParameters": {
              "id": 51581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4086:0:123"
            },
            "scope": 51583,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISmartVaultRegistry",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          51583
        ],
        "name": "ISmartVaultRegistry",
        "nameLocation": "3666:19:123",
        "scope": 51826,
        "usedErrors": []
      },
      {
        "id": 51825,
        "nodeType": "ContractDefinition",
        "src": "4091:9941:123",
        "nodes": [
          {
            "id": 51596,
            "nodeType": "FunctionDefinition",
            "src": "4423:105:123",
            "nodes": [],
            "documentation": {
              "id": 51586,
              "nodeType": "StructuredDocumentation",
              "src": "4206:212:123",
              "text": " @notice Gets do-hard-work indexes.\n @param smartVault Smart vault.\n @param flushIndex Flush index.\n @return dhwIndexes Do-hard-work indexes for flush index of the smart vault."
            },
            "functionSelector": "e90173bd",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "dhwIndexes",
            "nameLocation": "4432:10:123",
            "parameters": {
              "id": 51591,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51588,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "4451:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51596,
                  "src": "4443:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51587,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4443:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51590,
                  "mutability": "mutable",
                  "name": "flushIndex",
                  "nameLocation": "4471:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51596,
                  "src": "4463:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51589,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4463:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4442:40:123"
            },
            "returnParameters": {
              "id": 51595,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51594,
                  "mutability": "mutable",
                  "name": "dhwIndexes",
                  "nameLocation": "4516:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51596,
                  "src": "4506:20:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_uint16a16_$55783",
                    "typeString": "uint16a16"
                  },
                  "typeName": {
                    "id": 51593,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51592,
                      "name": "uint16a16",
                      "nameLocations": [
                        "4506:9:123"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55783,
                      "src": "4506:9:123"
                    },
                    "referencedDeclaration": 55783,
                    "src": "4506:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_uint16a16_$55783",
                      "typeString": "uint16a16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4505:22:123"
            },
            "scope": 51825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51604,
            "nodeType": "FunctionDefinition",
            "src": "4712:92:123",
            "nodes": [],
            "documentation": {
              "id": 51597,
              "nodeType": "StructuredDocumentation",
              "src": "4534:173:123",
              "text": " @notice Gets latest flush index for a smart vault.\n @param smartVault Smart vault.\n @return flushIndex Latest flush index for the smart vault."
            },
            "functionSelector": "a1280e4d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getLatestFlushIndex",
            "nameLocation": "4721:19:123",
            "parameters": {
              "id": 51600,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51599,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "4749:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51604,
                  "src": "4741:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4741:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4740:20:123"
            },
            "returnParameters": {
              "id": 51603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51602,
                  "mutability": "mutable",
                  "name": "flushIndex",
                  "nameLocation": "4792:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51604,
                  "src": "4784:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51601,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4784:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4783:20:123"
            },
            "scope": 51825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51613,
            "nodeType": "FunctionDefinition",
            "src": "4990:86:123",
            "nodes": [],
            "documentation": {
              "id": 51605,
              "nodeType": "StructuredDocumentation",
              "src": "4810:175:123",
              "text": " @notice Gets strategy allocation for a smart vault.\n @param smartVault Smart vault.\n @return allocation Strategy allocation for the smart vault."
            },
            "functionSelector": "52a9039c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "allocations",
            "nameLocation": "4999:11:123",
            "parameters": {
              "id": 51608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51607,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "5019:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51613,
                  "src": "5011:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5011:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5010:20:123"
            },
            "returnParameters": {
              "id": 51612,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51611,
                  "mutability": "mutable",
                  "name": "allocation",
                  "nameLocation": "5064:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51613,
                  "src": "5054:20:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_uint16a16_$55783",
                    "typeString": "uint16a16"
                  },
                  "typeName": {
                    "id": 51610,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51609,
                      "name": "uint16a16",
                      "nameLocations": [
                        "5054:9:123"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55783,
                      "src": "5054:9:123"
                    },
                    "referencedDeclaration": 55783,
                    "src": "5054:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_uint16a16_$55783",
                      "typeString": "uint16a16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5053:22:123"
            },
            "scope": 51825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51622,
            "nodeType": "FunctionDefinition",
            "src": "5248:92:123",
            "nodes": [],
            "documentation": {
              "id": 51614,
              "nodeType": "StructuredDocumentation",
              "src": "5082:161:123",
              "text": " @notice Gets strategies used by a smart vault.\n @param smartVault Smart vault.\n @return strategies Strategies for the smart vault."
            },
            "functionSelector": "39ebf823",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "strategies",
            "nameLocation": "5257:10:123",
            "parameters": {
              "id": 51617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51616,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "5276:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51622,
                  "src": "5268:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5268:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5267:20:123"
            },
            "returnParameters": {
              "id": 51621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51620,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "5328:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51622,
                  "src": "5311:27:123",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 51618,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "5311:7:123",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 51619,
                    "nodeType": "ArrayTypeName",
                    "src": "5311:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5310:29:123"
            },
            "scope": 51825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51630,
            "nodeType": "FunctionDefinition",
            "src": "5530:87:123",
            "nodes": [],
            "documentation": {
              "id": 51623,
              "nodeType": "StructuredDocumentation",
              "src": "5346:179:123",
              "text": " @notice Gets asest group used by a smart vault.\n @param smartVault Smart vault.\n @return assetGroupId ID of the asset group used by the smart vault."
            },
            "functionSelector": "6e6462d6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "assetGroupId",
            "nameLocation": "5539:12:123",
            "parameters": {
              "id": 51626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51625,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "5560:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51630,
                  "src": "5552:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5552:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5551:20:123"
            },
            "returnParameters": {
              "id": 51629,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51628,
                  "mutability": "mutable",
                  "name": "assetGroupId",
                  "nameLocation": "5603:12:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51630,
                  "src": "5595:20:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5595:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5594:22:123"
            },
            "scope": 51825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51639,
            "nodeType": "FunctionDefinition",
            "src": "5804:89:123",
            "nodes": [],
            "documentation": {
              "id": 51631,
              "nodeType": "StructuredDocumentation",
              "src": "5623:176:123",
              "text": " @notice Gets required deposit ratio for a smart vault.\n @param smartVault Smart vault.\n @return ratio Required deposit ratio for the smart vault."
            },
            "functionSelector": "f8fdca7a",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositRatio",
            "nameLocation": "5813:12:123",
            "parameters": {
              "id": 51634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51633,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "5834:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51639,
                  "src": "5826:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51632,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5826:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5825:20:123"
            },
            "returnParameters": {
              "id": 51638,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51637,
                  "mutability": "mutable",
                  "name": "ratio",
                  "nameLocation": "5886:5:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51639,
                  "src": "5869:22:123",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 51635,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "5869:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 51636,
                    "nodeType": "ArrayTypeName",
                    "src": "5869:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5868:24:123"
            },
            "scope": 51825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51645,
            "nodeType": "FunctionDefinition",
            "src": "6097:54:123",
            "nodes": [],
            "documentation": {
              "id": 51640,
              "nodeType": "StructuredDocumentation",
              "src": "5960:132:123",
              "text": " @notice Flushes deposits and withdrawal for the next do-hard-work.\n @param smartVault Smart vault to flush."
            },
            "functionSelector": "0d574535",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "flushSmartVault",
            "nameLocation": "6106:15:123",
            "parameters": {
              "id": 51643,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51642,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "6130:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51645,
                  "src": "6122:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6122:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6121:20:123"
            },
            "returnParameters": {
              "id": 51644,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6150:0:123"
            },
            "scope": 51825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51652,
            "nodeType": "FunctionDefinition",
            "src": "6515:75:123",
            "nodes": [],
            "documentation": {
              "id": 51646,
              "nodeType": "StructuredDocumentation",
              "src": "6157:353:123",
              "text": " @notice Reallocates smart vaults.\n @dev Requirements:\n - caller must have a ROLE_REALLOCATOR role\n - smart vaults must be registered\n - smart vaults must use same asset group\n - strategies must represent a set of strategies used by smart vaults\n @param reallocateParams Paramaters for reallocation."
            },
            "functionSelector": "fe19c168",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "reallocate",
            "nameLocation": "6524:10:123",
            "parameters": {
              "id": 51650,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51649,
                  "mutability": "mutable",
                  "name": "reallocateParams",
                  "nameLocation": "6563:16:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51652,
                  "src": "6535:44:123",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ReallocateParamBag_$51568_calldata_ptr",
                    "typeString": "struct ReallocateParamBag"
                  },
                  "typeName": {
                    "id": 51648,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51647,
                      "name": "ReallocateParamBag",
                      "nameLocations": [
                        "6535:18:123"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51568,
                      "src": "6535:18:123"
                    },
                    "referencedDeclaration": 51568,
                    "src": "6535:18:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ReallocateParamBag_$51568_storage_ptr",
                      "typeString": "struct ReallocateParamBag"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6534:46:123"
            },
            "returnParameters": {
              "id": 51651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6589:0:123"
            },
            "scope": 51825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51663,
            "nodeType": "FunctionDefinition",
            "src": "7042:110:123",
            "nodes": [],
            "documentation": {
              "id": 51653,
              "nodeType": "StructuredDocumentation",
              "src": "6596:441:123",
              "text": " @notice Removes strategy from vaults, and optionally removes it from the system as well.\n @dev Requirements:\n - caller must have role ROLE_SPOOL_ADMIN\n - the strategy has to be active (requires ROLE_STRATEGY)\n @param strategy Strategy address to remove.\n @param vaults Array of vaults from which to remove the strategy\n @param disableStrategy Also disable the strategy across the system"
            },
            "functionSelector": "a1bd9cc1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "removeStrategyFromVaults",
            "nameLocation": "7051:24:123",
            "parameters": {
              "id": 51661,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51655,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "7084:8:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51663,
                  "src": "7076:16:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51654,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7076:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51658,
                  "mutability": "mutable",
                  "name": "vaults",
                  "nameLocation": "7113:6:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51663,
                  "src": "7094:25:123",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 51656,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "7094:7:123",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 51657,
                    "nodeType": "ArrayTypeName",
                    "src": "7094:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51660,
                  "mutability": "mutable",
                  "name": "disableStrategy",
                  "nameLocation": "7126:15:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51663,
                  "src": "7121:20:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51659,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7121:4:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7075:67:123"
            },
            "returnParameters": {
              "id": 51662,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7151:0:123"
            },
            "scope": 51825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51671,
            "nodeType": "FunctionDefinition",
            "src": "7411:73:123",
            "nodes": [],
            "documentation": {
              "id": 51664,
              "nodeType": "StructuredDocumentation",
              "src": "7158:248:123",
              "text": " @notice Syncs smart vault with strategies.\n @param smartVault Smart vault to sync.\n @param revertIfError If true, sync will revert if every flush index cannot be synced; if false it will sync all flush indexes it can."
            },
            "functionSelector": "73bf0e50",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "syncSmartVault",
            "nameLocation": "7420:14:123",
            "parameters": {
              "id": 51669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51666,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "7443:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51671,
                  "src": "7435:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51665,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7435:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51668,
                  "mutability": "mutable",
                  "name": "revertIfError",
                  "nameLocation": "7460:13:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51671,
                  "src": "7455:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51667,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7455:4:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7434:40:123"
            },
            "returnParameters": {
              "id": 51670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7483:0:123"
            },
            "scope": 51825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51686,
            "nodeType": "FunctionDefinition",
            "src": "8341:178:123",
            "nodes": [],
            "documentation": {
              "id": 51672,
              "nodeType": "StructuredDocumentation",
              "src": "7490:846:123",
              "text": " @dev Calculate number of SVTs that haven't been synced yet after DHW runs\n DHW has minted strategy shares, but vaults haven't claimed them yet.\n Includes management fees (percentage of assets under management, distributed throughout a year) and deposit fees .\n Invariants:\n - There can't be more than once un-synced flush index per vault at any given time.\n - Flush index can't be synced, if all DHWs haven't been completed yet.\n Can be used to retrieve the number of SSTs the vault would claim during sync.\n @param smartVault SmartVault address\n @return oldTotalSVTs Amount of SVTs before sync\n @return mintedSVTs Amount of SVTs minted during sync\n @return feeSVTs Amount of SVTs pertaining to fees\n @return sstShares Amount of SSTs claimed per strategy"
            },
            "functionSelector": "bb9a7578",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "simulateSync",
            "nameLocation": "8350:12:123",
            "parameters": {
              "id": 51675,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51674,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "8371:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51686,
                  "src": "8363:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51673,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8363:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8362:20:123"
            },
            "returnParameters": {
              "id": 51685,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51677,
                  "mutability": "mutable",
                  "name": "oldTotalSVTs",
                  "nameLocation": "8438:12:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51686,
                  "src": "8430:20:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8430:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51679,
                  "mutability": "mutable",
                  "name": "mintedSVTs",
                  "nameLocation": "8460:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51686,
                  "src": "8452:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8452:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51681,
                  "mutability": "mutable",
                  "name": "feeSVTs",
                  "nameLocation": "8480:7:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51686,
                  "src": "8472:15:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51680,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8472:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51684,
                  "mutability": "mutable",
                  "name": "sstShares",
                  "nameLocation": "8508:9:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51686,
                  "src": "8489:28:123",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 51682,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8489:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 51683,
                    "nodeType": "ArrayTypeName",
                    "src": "8489:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8429:89:123"
            },
            "scope": 51825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51699,
            "nodeType": "FunctionDefinition",
            "src": "8823:159:123",
            "nodes": [],
            "documentation": {
              "id": 51687,
              "nodeType": "StructuredDocumentation",
              "src": "8525:293:123",
              "text": " @dev Simulate sync when burning dNFTs and return their svts value.\n @param smartVault SmartVault address\n @param userAddress User address that owns dNFTs\n @param nftIds Ids of dNFTs\n @return svts Amount of svts user would get if he burns dNFTs"
            },
            "functionSelector": "ab1e74ca",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "simulateSyncWithBurn",
            "nameLocation": "8832:20:123",
            "parameters": {
              "id": 51695,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51689,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "8861:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51699,
                  "src": "8853:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51688,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8853:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51691,
                  "mutability": "mutable",
                  "name": "userAddress",
                  "nameLocation": "8881:11:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51699,
                  "src": "8873:19:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8873:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51694,
                  "mutability": "mutable",
                  "name": "nftIds",
                  "nameLocation": "8913:6:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51699,
                  "src": "8894:25:123",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 51692,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "8894:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 51693,
                    "nodeType": "ArrayTypeName",
                    "src": "8894:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8852:68:123"
            },
            "returnParameters": {
              "id": 51698,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51697,
                  "mutability": "mutable",
                  "name": "svts",
                  "nameLocation": "8976:4:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51699,
                  "src": "8968:12:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8968:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8967:14:123"
            },
            "scope": 51825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51713,
            "nodeType": "FunctionDefinition",
            "src": "9238:154:123",
            "nodes": [],
            "documentation": {
              "id": 51700,
              "nodeType": "StructuredDocumentation",
              "src": "8988:245:123",
              "text": " @notice Instantly redeems smart vault shares for assets.\n @param bag Parameters for fast redeemal.\n @param withdrawalSlippages Slippages guarding redeemal.\n @return withdrawnAssets Amount of assets withdrawn."
            },
            "functionSelector": "e1c2eea6",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeemFast",
            "nameLocation": "9247:10:123",
            "parameters": {
              "id": 51708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51703,
                  "mutability": "mutable",
                  "name": "bag",
                  "nameLocation": "9277:3:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51713,
                  "src": "9258:22:123",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RedeemBag_$52944_calldata_ptr",
                    "typeString": "struct RedeemBag"
                  },
                  "typeName": {
                    "id": 51702,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51701,
                      "name": "RedeemBag",
                      "nameLocations": [
                        "9258:9:123"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52944,
                      "src": "9258:9:123"
                    },
                    "referencedDeclaration": 52944,
                    "src": "9258:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RedeemBag_$52944_storage_ptr",
                      "typeString": "struct RedeemBag"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51707,
                  "mutability": "mutable",
                  "name": "withdrawalSlippages",
                  "nameLocation": "9303:19:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51713,
                  "src": "9282:40:123",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "uint256[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 51704,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9282:7:123",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 51705,
                      "nodeType": "ArrayTypeName",
                      "src": "9282:9:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      }
                    },
                    "id": 51706,
                    "nodeType": "ArrayTypeName",
                    "src": "9282:11:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_uint256_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "uint256[][]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9257:66:123"
            },
            "returnParameters": {
              "id": 51712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51711,
                  "mutability": "mutable",
                  "name": "withdrawnAssets",
                  "nameLocation": "9375:15:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51713,
                  "src": "9358:32:123",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 51709,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9358:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 51710,
                    "nodeType": "ArrayTypeName",
                    "src": "9358:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9357:34:123"
            },
            "scope": 51825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51732,
            "nodeType": "FunctionDefinition",
            "src": "9873:230:123",
            "nodes": [],
            "documentation": {
              "id": 51714,
              "nodeType": "StructuredDocumentation",
              "src": "9398:470:123",
              "text": " @notice Claims withdrawal of assets by burning withdrawal NFT.\n @dev Requirements:\n - withdrawal NFT must be valid\n @param smartVault Address of the smart vault that issued the withdrawal NFT.\n @param nftIds ID of withdrawal NFT to burn.\n @param nftAmounts amounts\n @param receiver Receiver of claimed assets.\n @return assetAmounts Amounts of assets claimed.\n @return assetGroupId ID of the asset group."
            },
            "functionSelector": "f8a70486",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimWithdrawal",
            "nameLocation": "9882:15:123",
            "parameters": {
              "id": 51725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51716,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "9915:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51732,
                  "src": "9907:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9907:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51719,
                  "mutability": "mutable",
                  "name": "nftIds",
                  "nameLocation": "9954:6:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51732,
                  "src": "9935:25:123",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 51717,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9935:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 51718,
                    "nodeType": "ArrayTypeName",
                    "src": "9935:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51722,
                  "mutability": "mutable",
                  "name": "nftAmounts",
                  "nameLocation": "9989:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51732,
                  "src": "9970:29:123",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 51720,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "9970:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 51721,
                    "nodeType": "ArrayTypeName",
                    "src": "9970:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51724,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "10017:8:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51732,
                  "src": "10009:16:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51723,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10009:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9897:134:123"
            },
            "returnParameters": {
              "id": 51731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51728,
                  "mutability": "mutable",
                  "name": "assetAmounts",
                  "nameLocation": "10067:12:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51732,
                  "src": "10050:29:123",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 51726,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10050:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 51727,
                    "nodeType": "ArrayTypeName",
                    "src": "10050:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51730,
                  "mutability": "mutable",
                  "name": "assetGroupId",
                  "nameLocation": "10089:12:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51732,
                  "src": "10081:20:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51729,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10081:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10049:53:123"
            },
            "scope": 51825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51746,
            "nodeType": "FunctionDefinition",
            "src": "10525:173:123",
            "nodes": [],
            "documentation": {
              "id": 51733,
              "nodeType": "StructuredDocumentation",
              "src": "10109:411:123",
              "text": " @notice Claims smart vault tokens by burning the deposit NFT.\n @dev Requirements:\n - deposit NFT must be valid\n - flush must be synced\n @param smartVaultAddress Address of the smart vault that issued the deposit NFT.\n @param nftIds ID of the deposit NFT to burn.\n @param nftAmounts amounts\n @return claimedAmount Amount of smart vault tokens claimed."
            },
            "functionSelector": "61189dd3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claimSmartVaultTokens",
            "nameLocation": "10534:21:123",
            "parameters": {
              "id": 51742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51735,
                  "mutability": "mutable",
                  "name": "smartVaultAddress",
                  "nameLocation": "10564:17:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51746,
                  "src": "10556:25:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51734,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10556:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51738,
                  "mutability": "mutable",
                  "name": "nftIds",
                  "nameLocation": "10602:6:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51746,
                  "src": "10583:25:123",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 51736,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10583:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 51737,
                    "nodeType": "ArrayTypeName",
                    "src": "10583:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51741,
                  "mutability": "mutable",
                  "name": "nftAmounts",
                  "nameLocation": "10629:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51746,
                  "src": "10610:29:123",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 51739,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "10610:7:123",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 51740,
                    "nodeType": "ArrayTypeName",
                    "src": "10610:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10555:85:123"
            },
            "returnParameters": {
              "id": 51745,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51744,
                  "mutability": "mutable",
                  "name": "claimedAmount",
                  "nameLocation": "10683:13:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51746,
                  "src": "10675:21:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51743,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10675:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10674:23:123"
            },
            "scope": 51825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51759,
            "nodeType": "FunctionDefinition",
            "src": "11226:107:123",
            "nodes": [],
            "documentation": {
              "id": 51747,
              "nodeType": "StructuredDocumentation",
              "src": "10704:517:123",
              "text": " @notice Initiates a withdrawal process and mints a withdrawal NFT. Once all DHWs are executed, user can\n use the withdrawal NFT to claim the assets.\n Optionally, caller can pass a list of deposit NFTs to unwrap.\n @param bag smart vault address, amount of shares to redeem, nft ids and amounts to burn\n @param receiver address that will receive the withdrawal NFT\n @param doFlush optionally flush the smart vault\n @return receipt ID of the receipt withdrawal NFT."
            },
            "functionSelector": "388bbfd3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeem",
            "nameLocation": "11235:6:123",
            "parameters": {
              "id": 51755,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51750,
                  "mutability": "mutable",
                  "name": "bag",
                  "nameLocation": "11261:3:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51759,
                  "src": "11242:22:123",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RedeemBag_$52944_calldata_ptr",
                    "typeString": "struct RedeemBag"
                  },
                  "typeName": {
                    "id": 51749,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51748,
                      "name": "RedeemBag",
                      "nameLocations": [
                        "11242:9:123"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52944,
                      "src": "11242:9:123"
                    },
                    "referencedDeclaration": 52944,
                    "src": "11242:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RedeemBag_$52944_storage_ptr",
                      "typeString": "struct RedeemBag"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51752,
                  "mutability": "mutable",
                  "name": "receiver",
                  "nameLocation": "11274:8:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51759,
                  "src": "11266:16:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51751,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11266:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51754,
                  "mutability": "mutable",
                  "name": "doFlush",
                  "nameLocation": "11289:7:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51759,
                  "src": "11284:12:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51753,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11284:4:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11241:56:123"
            },
            "returnParameters": {
              "id": 51758,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51757,
                  "mutability": "mutable",
                  "name": "receipt",
                  "nameLocation": "11324:7:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51759,
                  "src": "11316:15:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51756,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11316:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11315:17:123"
            },
            "scope": 51825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51772,
            "nodeType": "FunctionDefinition",
            "src": "11893:107:123",
            "nodes": [],
            "documentation": {
              "id": 51760,
              "nodeType": "StructuredDocumentation",
              "src": "11339:549:123",
              "text": " @notice Initiates a withdrawal process and mints a withdrawal NFT. Once all DHWs are executed, user can\n use the withdrawal NFT to claim the assets.\n Optionally, caller can pass a list of deposit NFTs to unwrap.\n @param bag smart vault address, amount of shares to redeem, nft ids and amounts to burn\n @param owner address that owns the shares to be redeemed and will receive the withdrawal NFT\n @param doFlush optionally flush the smart vault\n @return receipt ID of the receipt withdrawal NFT."
            },
            "functionSelector": "7f03e683",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "redeemFor",
            "nameLocation": "11902:9:123",
            "parameters": {
              "id": 51768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51763,
                  "mutability": "mutable",
                  "name": "bag",
                  "nameLocation": "11931:3:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51772,
                  "src": "11912:22:123",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_RedeemBag_$52944_calldata_ptr",
                    "typeString": "struct RedeemBag"
                  },
                  "typeName": {
                    "id": 51762,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51761,
                      "name": "RedeemBag",
                      "nameLocations": [
                        "11912:9:123"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52944,
                      "src": "11912:9:123"
                    },
                    "referencedDeclaration": 52944,
                    "src": "11912:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_RedeemBag_$52944_storage_ptr",
                      "typeString": "struct RedeemBag"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51765,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "11944:5:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51772,
                  "src": "11936:13:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51764,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11936:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51767,
                  "mutability": "mutable",
                  "name": "doFlush",
                  "nameLocation": "11956:7:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51772,
                  "src": "11951:12:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 51766,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "11951:4:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11911:53:123"
            },
            "returnParameters": {
              "id": 51771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51770,
                  "mutability": "mutable",
                  "name": "receipt",
                  "nameLocation": "11991:7:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51772,
                  "src": "11983:15:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51769,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11983:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11982:17:123"
            },
            "scope": 51825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51781,
            "nodeType": "FunctionDefinition",
            "src": "12317:77:123",
            "nodes": [],
            "documentation": {
              "id": 51773,
              "nodeType": "StructuredDocumentation",
              "src": "12006:306:123",
              "text": " @notice Initiated a deposit and mints a deposit NFT. Once all DHWs are executed, user can\n unwrap the deposit NDF and claim his SVTs.\n @param bag smartVault address, assets, NFT receiver address, referral address, doFlush\n @return receipt ID of the receipt deposit NFT."
            },
            "functionSelector": "fa15b91b",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "12326:7:123",
            "parameters": {
              "id": 51777,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51776,
                  "mutability": "mutable",
                  "name": "bag",
                  "nameLocation": "12354:3:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51781,
                  "src": "12334:23:123",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DepositBag_$50452_calldata_ptr",
                    "typeString": "struct DepositBag"
                  },
                  "typeName": {
                    "id": 51775,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51774,
                      "name": "DepositBag",
                      "nameLocations": [
                        "12334:10:123"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 50452,
                      "src": "12334:10:123"
                    },
                    "referencedDeclaration": 50452,
                    "src": "12334:10:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DepositBag_$50452_storage_ptr",
                      "typeString": "struct DepositBag"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12333:25:123"
            },
            "returnParameters": {
              "id": 51780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51779,
                  "mutability": "mutable",
                  "name": "receipt",
                  "nameLocation": "12385:7:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51781,
                  "src": "12377:15:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12377:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12376:17:123"
            },
            "scope": 51825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51787,
            "nodeType": "FunctionDefinition",
            "src": "12717:61:123",
            "nodes": [],
            "documentation": {
              "id": 51782,
              "nodeType": "StructuredDocumentation",
              "src": "12400:312:123",
              "text": " @notice Recovers pending deposits from smart vault to emergency wallet.\n @dev Requirements:\n - caller must have role ROLE_SPOOL_ADMIN\n - all strategies of the smart vault need to be ghost strategies\n @param smartVault Smart vault from which to recover pending deposits."
            },
            "functionSelector": "260c2313",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "recoverPendingDeposits",
            "nameLocation": "12726:22:123",
            "parameters": {
              "id": 51785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51784,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "12757:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51787,
                  "src": "12749:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12749:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12748:20:123"
            },
            "returnParameters": {
              "id": 51786,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12777:0:123"
            },
            "scope": 51825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 51794,
            "nodeType": "EventDefinition",
            "src": "12966:72:123",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 51788,
              "nodeType": "StructuredDocumentation",
              "src": "12824:137:123",
              "text": " @notice Smart vault has been flushed\n @param smartVault Smart vault address\n @param flushIndex Flush index"
            },
            "eventSelector": "d785d6ac7a1beb66e7c7aa47d471a28dc52f21913125972a85b8cbd2bf6234de",
            "name": "SmartVaultFlushed",
            "nameLocation": "12972:17:123",
            "parameters": {
              "id": 51793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51790,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "13006:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51794,
                  "src": "12990:26:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12990:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51792,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "flushIndex",
                  "nameLocation": "13026:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51794,
                  "src": "13018:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13018:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12989:48:123"
            }
          },
          {
            "id": 51801,
            "nodeType": "EventDefinition",
            "src": "13185:71:123",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 51795,
              "nodeType": "StructuredDocumentation",
              "src": "13044:136:123",
              "text": " @notice Smart vault has been synced\n @param smartVault Smart vault address\n @param flushIndex Flush index"
            },
            "eventSelector": "206fbd6d84a86176a548e1fdfddab2bc0ec06020f85918c4b12f8f5716a3a81a",
            "name": "SmartVaultSynced",
            "nameLocation": "13191:16:123",
            "parameters": {
              "id": 51800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51797,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "13224:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51801,
                  "src": "13208:26:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51796,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13208:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51799,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "flushIndex",
                  "nameLocation": "13244:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51801,
                  "src": "13236:18:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 51798,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13236:7:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13207:48:123"
            }
          },
          {
            "id": 51809,
            "nodeType": "EventDefinition",
            "src": "13427:100:123",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 51802,
              "nodeType": "StructuredDocumentation",
              "src": "13262:160:123",
              "text": " @notice Smart vault has been registered\n @param smartVault Smart vault address\n @param registrationForm Smart vault configuration"
            },
            "eventSelector": "3de86e7d916b4d19191e071d9ca9ba1c74cc94fc5fea1332b180acf42e27d536",
            "name": "SmartVaultRegistered",
            "nameLocation": "13433:20:123",
            "parameters": {
              "id": 51808,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51804,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "13470:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51809,
                  "src": "13454:26:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51803,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13454:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51807,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "registrationForm",
                  "nameLocation": "13509:16:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51809,
                  "src": "13482:43:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SmartVaultRegistrationForm_$51541_memory_ptr",
                    "typeString": "struct SmartVaultRegistrationForm"
                  },
                  "typeName": {
                    "id": 51806,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51805,
                      "name": "SmartVaultRegistrationForm",
                      "nameLocations": [
                        "13482:26:123"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51541,
                      "src": "13482:26:123"
                    },
                    "referencedDeclaration": 51541,
                    "src": "13482:26:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SmartVaultRegistrationForm_$51541_storage_ptr",
                      "typeString": "struct SmartVaultRegistrationForm"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13453:73:123"
            }
          },
          {
            "id": 51816,
            "nodeType": "EventDefinition",
            "src": "13694:80:123",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 51810,
              "nodeType": "StructuredDocumentation",
              "src": "13533:156:123",
              "text": " @notice Strategy was removed from the vault\n @param strategy Strategy address\n @param vault Vault to remove the strategy from"
            },
            "eventSelector": "eb80b29f2addaaffe1908cea1e5251e60bf25cb5bef4c02f816e670ede404dfa",
            "name": "StrategyRemovedFromVault",
            "nameLocation": "13700:24:123",
            "parameters": {
              "id": 51815,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51812,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "13741:8:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51816,
                  "src": "13725:24:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51811,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13725:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51814,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "vault",
                  "nameLocation": "13767:5:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51816,
                  "src": "13751:21:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51813,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13751:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13724:49:123"
            }
          },
          {
            "id": 51824,
            "nodeType": "EventDefinition",
            "src": "13948:82:123",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 51817,
              "nodeType": "StructuredDocumentation",
              "src": "13780:163:123",
              "text": " @notice Vault was reallocation executed\n @param smartVault Smart vault address\n @param newAllocations new vault strategy allocations"
            },
            "eventSelector": "ee364d6312abc273abfa22ba799f321e049f2e38d0100fad80090594bc0fbff3",
            "name": "SmartVaultReallocated",
            "nameLocation": "13954:21:123",
            "parameters": {
              "id": 51823,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 51819,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "smartVault",
                  "nameLocation": "13992:10:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51824,
                  "src": "13976:26:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 51818,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13976:7:123",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51822,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAllocations",
                  "nameLocation": "14014:14:123",
                  "nodeType": "VariableDeclaration",
                  "scope": 51824,
                  "src": "14004:24:123",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_userDefinedValueType$_uint16a16_$55783",
                    "typeString": "uint16a16"
                  },
                  "typeName": {
                    "id": 51821,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 51820,
                      "name": "uint16a16",
                      "nameLocations": [
                        "14004:9:123"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 55783,
                      "src": "14004:9:123"
                    },
                    "referencedDeclaration": 55783,
                    "src": "14004:9:123",
                    "typeDescriptions": {
                      "typeIdentifier": "t_userDefinedValueType$_uint16a16_$55783",
                      "typeString": "uint16a16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13975:54:123"
            }
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 51584,
              "name": "ISmartVaultRegistry",
              "nameLocations": [
                "4123:19:123"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 51583,
              "src": "4123:19:123"
            },
            "id": 51585,
            "nodeType": "InheritanceSpecifier",
            "src": "4123:19:123"
          }
        ],
        "canonicalName": "ISmartVaultManager",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          51825,
          51583
        ],
        "name": "ISmartVaultManager",
        "nameLocation": "4101:18:123",
        "scope": 51826,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 123
}